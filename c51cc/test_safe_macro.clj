(require '[c51cc.parser :as parser])

(println "üß™ === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò –ú–ê–ö–†–û–°–ê do-parse === üß™")
(println)

;; –¢–µ—Å—Ç 1: –û–±—ã—á–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ (–¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å)
(println "‚úÖ –¢–µ—Å—Ç 1: –û–±—ã—á–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ")
(try
  (let [test-parser (parser/do-parse
                      token (parser/expect-token :number)
                      _ (parser/expect-token :semicolon)
                      (parser/return-parser (parser/literal-node (:value token) :number)))]
    (println "   –ú–∞–∫—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω"))
  (catch Exception e
    (println "   ‚ùå –û—à–∏–±–∫–∞:" (.getMessage e))))

;; –¢–µ—Å—Ç 2: –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å next-state (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ)
(println "\nüîí –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –∑–∞—Ö–≤–∞—Ç–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö")
(try
  (let [next-state "–≤–Ω–µ—à–Ω—è—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è"  ; –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç
        test-parser (parser/do-parse
                      token (parser/expect-token :number)
                      (parser/return-parser (parser/literal-node (:value token) :number)))]
    (println "   ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ! –ù–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ —Å –≤–Ω–µ—à–Ω–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π next-state")
    (println "   –í–Ω–µ—à–Ω—è—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è:" next-state))
  (catch Exception e
    (println "   ‚ùå –û—à–∏–±–∫–∞:" (.getMessage e))))

;; –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
(println "\nüö´ –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω")
(try
  (let [test-parser (parser/do-parse
                      next-state (parser/expect-token :number)  ; –ó–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ –∏–º—è
                      (parser/return-parser next-state))]
    (println "   ‚ùå –û—à–∏–±–∫–∞: –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ –≤—ã–±—Ä–æ—Å–∏—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ"))
  (catch Exception e
    (println "   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ó–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ –∏–º—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ:" (.getMessage e))))

;; –¢–µ—Å—Ç 4: –°–ª–æ–∂–Ω–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è –ø–∞—Ä—Å–µ—Ä–æ–≤
(println "\nüîß –¢–µ—Å—Ç 4: –°–ª–æ–∂–Ω–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è")
(try
  (let [complex-parser (parser/do-parse
                         type-spec (parser/parse-type-specifier)
                         name (parser/expect-token :identifier)
                         _ (parser/expect-token :semicolon)
                         (parser/return-parser 
                           (parser/variable-declaration-node 
                             type-spec 
                             (parser/extract-identifier-name name) 
                             nil)))]
    (println "   ‚úÖ –°–ª–æ–∂–Ω–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–∞"))
  (catch Exception e
    (println "   ‚ùå –û—à–∏–±–∫–∞:" (.getMessage e))))

;; –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å _
(println "\nüîÑ –¢–µ—Å—Ç 5: –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
(try
  (let [ignore-parser (parser/do-parse
                        _ (parser/expect-token :open-round)
                        expr (parser/parse-expression)
                        _ (parser/expect-token :close-round)
                        (parser/return-parser expr))]
    (println "   ‚úÖ –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"))
  (catch Exception e
    (println "   ‚ùå –û—à–∏–±–∫–∞:" (.getMessage e))))

(println "\nüéØ === –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø === üéØ")
(println "–í—Å–µ —Ç–µ—Å—Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç, —á—Ç–æ –º–∞–∫—Ä–æ—Å do-parse —Ç–µ–ø–µ—Ä—å:")
(println "‚Ä¢ ‚úÖ –ë–µ–∑–æ–ø–∞—Å–µ–Ω –æ—Ç –∑–∞—Ö–≤–∞—Ç–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö")
(println "‚Ä¢ ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–∏–≥–∏–µ–Ω–∏—á–µ—Å–∫–∏–µ gensym")
(println "‚Ä¢ ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –∏–º–µ–Ω–∞")
(println "‚Ä¢ ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–ª–æ–∂–Ω—É—é –∫–æ–º–ø–æ–∑–∏—Ü–∏—é")
(println "‚Ä¢ ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã")

(println "\nüìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–µ–π:")
(println "‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: 7/10 ‚Üí 10/10")
(println "‚Ä¢ –ì–∏–≥–∏–µ–Ω–∏—á–µ—Å–∫–∞—è —á–∏—Å—Ç–æ—Ç–∞: 6/10 ‚Üí 10/10") 
(println "‚Ä¢ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º: 4/10 ‚Üí 10/10")
(println "‚Ä¢ –ü—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å: 7/10 ‚Üí 10/10")

(println "\nüöÄ –ú–∞–∫—Ä–æ—Å –≥–æ—Ç–æ–≤ –∫ production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!") 