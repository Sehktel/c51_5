for-loop-fsm (Конечный автомат для циклов for)
Обработка синтаксического разбора циклов for с различными вариантами инициализации, условия и инкремента
Функциональный подход: чистая трансформация входных токенов в абстрактное синтаксическое дерево

while-loop-fsm (Конечный автомат для циклов while)
Управление синтаксическим анализом циклов while, включая вложенные и сложные условия
Акцент на иммутабельности состояний и чистых трансформациях

declaration-fsm (Конечный автомат для объявлений переменных)
Разбор различных типов объявлений: локальные, глобальные, с инициализацией
Использование pattern matching для различных сценариев объявления

function-definition-fsm (Конечный автомат для определений функций)
Анализ сигнатур функций, параметров, возвращаемых типов
Создание абстракций высшего порядка для представления функциональных определений

interrupt-handler-fsm (Конечный автомат для обработчиков прерываний)
Специфичный для C51 синтаксический анализ прерываний
Моделирование прерываний как чистых функциональных трансформаций

sfr-register-fsm (Конечный автомат для специальных регистров)
Обработка объявлений специальных функциональных регистров (SFR)
Учитывает особенности микроконтроллеров 8051/C51

bit-addressable-fsm (Конечный автомат для битоадресуемых переменных)
Анализ битоадресуемых областей памяти
Специфика работы с отдельными битами в регистрах

interrupt-priority-fsm (Конечный автомат для приоритетов прерываний)
Разбор синтаксиса установки приоритетов прерываний
Характерно для архитектуры 8051

using-fsm (Конечный автомат для директив using)
Обработка директив using для подключения библиотек
Управление пространствами имен и импортами

function-arguments-fsm (Конечный автомат разбора аргументов функции)
Обработка сложных сценариев передачи аргументов
Анализ типов, количества и порядка аргументов
Особенности передачи по значению/указателю в C51

return-statement-fsm (Конечный автомат блока return)
Разбор различных вариантов возврата значений
Обработка return для разных типов (int, char, void)
Специфика возврата в контексте 8-битной архитектуры

expression-parsing-fsm (Конечный автомат разбора выражений)
Наиболее сложный и универсальный автомат
Обработка:
Арифметических выражений
Логических операций
Тернарных операторов
Приведения типов
Особенности битовых и pointer-операций в C51
