/*
 * Заголовочный файл для микроконтроллера AT89S4051
 * 
 * Содержит определения всех SFR регистров, битовых переменных
 * и констант для работы с AT89S4051.
 * 
 * AT89S4051 - это 8-битный микроконтроллер семейства 8051
 * с 4KB Flash памяти программ и 128 байт RAM.
 */

#ifndef __AT89S4051_H__
#define __AT89S4051_H__

// ============================================================================
// РЕГИСТРЫ СПЕЦИАЛЬНЫХ ФУНКЦИЙ (SFR)
// ============================================================================

// Аккумулятор и регистры общего назначения
sfr ACC = 0xE0;         // Аккумулятор
sfr B = 0xF0;           // Регистр B
sfr PSW = 0xD0;         // Слово состояния программы
sfr SP = 0x81;          // Указатель стека
sfr DPL = 0x82;         // Младший байт указателя данных
sfr DPH = 0x83;         // Старший байт указателя данных

// Порты ввода-вывода
sfr P1 = 0x90;          // Порт P1 (единственный порт в AT89S4051)
sfr P3 = 0xB0;          // Порт P3 (только некоторые биты доступны)

// Таймеры
sfr TCON = 0x88;        // Управление таймерами
sfr TMOD = 0x89;        // Режимы таймеров
sfr TL0 = 0x8A;         // Младший байт таймера 0
sfr TL1 = 0x8B;         // Младший байт таймера 1
sfr TH0 = 0x8C;         // Старший байт таймера 0
sfr TH1 = 0x8D;         // Старший байт таймера 1

// Последовательный порт
sfr SCON = 0x98;        // Управление последовательным портом
sfr SBUF = 0x99;        // Буфер последовательного порта

// Система прерываний
sfr IE = 0xA8;          // Разрешение прерываний
sfr IP = 0xB8;          // Приоритеты прерываний

// Управление питанием
sfr PCON = 0x87;        // Управление питанием

// ============================================================================
// БИТОВЫЕ ПЕРЕМЕННЫЕ ПОРТОВ
// ============================================================================

// Порт P1 (биты P1.0 - P1.7)
sbit P1_0 = P1^0;
sbit P1_1 = P1^1;
sbit P1_2 = P1^2;
sbit P1_3 = P1^3;
sbit P1_4 = P1^4;
sbit P1_5 = P1^5;
sbit P1_6 = P1^6;
sbit P1_7 = P1^7;

// Порт P3 (только некоторые биты доступны в AT89S4051)
sbit RXD = P3^0;        // Вход последовательного порта
sbit TXD = P3^1;        // Выход последовательного порта
sbit INT0 = P3^2;       // Внешнее прерывание 0
sbit INT1 = P3^3;       // Внешнее прерывание 1
sbit T0 = P3^4;         // Внешний вход таймера 0
sbit T1 = P3^5;         // Внешний вход таймера 1

// ============================================================================
// БИТОВЫЕ ПЕРЕМЕННЫЕ РЕГИСТРОВ УПРАВЛЕНИЯ
// ============================================================================

// Слово состояния программы (PSW)
sbit CY = PSW^7;        // Флаг переноса
sbit AC = PSW^6;        // Флаг вспомогательного переноса
sbit F0 = PSW^5;        // Пользовательский флаг 0
sbit RS1 = PSW^4;       // Выбор банка регистров (бит 1)
sbit RS0 = PSW^3;       // Выбор банка регистров (бит 0)
sbit OV = PSW^2;        // Флаг переполнения
sbit P = PSW^0;         // Флаг четности

// Управление таймерами (TCON)
sbit TF1 = TCON^7;      // Флаг переполнения таймера 1
sbit TR1 = TCON^6;      // Запуск таймера 1
sbit TF0 = TCON^5;      // Флаг переполнения таймера 0
sbit TR0 = TCON^4;      // Запуск таймера 0
sbit IE1 = TCON^3;      // Флаг внешнего прерывания 1
sbit IT1 = TCON^2;      // Тип внешнего прерывания 1
sbit IE0 = TCON^1;      // Флаг внешнего прерывания 0
sbit IT0 = TCON^0;      // Тип внешнего прерывания 0

// Управление последовательным портом (SCON)
sbit SM0 = SCON^7;      // Режим последовательного порта (бит 0)
sbit SM1 = SCON^6;      // Режим последовательного порта (бит 1)
sbit SM2 = SCON^5;      // Многопроцессорный режим
sbit REN = SCON^4;      // Разрешение приема
sbit TB8 = SCON^3;      // 9-й бит передачи
sbit RB8 = SCON^2;      // 9-й бит приема
sbit TI = SCON^1;       // Флаг завершения передачи
sbit RI = SCON^0;       // Флаг завершения приема

// Разрешение прерываний (IE)
sbit EA = IE^7;         // Глобальное разрешение прерываний
sbit ES = IE^4;         // Разрешение прерывания от последовательного порта
sbit ET1 = IE^3;        // Разрешение прерывания от таймера 1
sbit EX1 = IE^2;        // Разрешение внешнего прерывания 1
sbit ET0 = IE^1;        // Разрешение прерывания от таймера 0
sbit EX0 = IE^0;        // Разрешение внешнего прерывания 0

// Приоритеты прерываний (IP)
sbit PS = IP^4;         // Приоритет прерывания от последовательного порта
sbit PT1 = IP^3;        // Приоритет прерывания от таймера 1
sbit PX1 = IP^2;        // Приоритет внешнего прерывания 1
sbit PT0 = IP^1;        // Приоритет прерывания от таймера 0
sbit PX0 = IP^0;        // Приоритет внешнего прерывания 0

// ============================================================================
// КОНСТАНТЫ И МАКРОСЫ
// ============================================================================

// Номера прерываний
#define INT_EXT0    0   // Внешнее прерывание 0
#define INT_TIMER0  1   // Таймер 0
#define INT_EXT1    2   // Внешнее прерывание 1
#define INT_TIMER1  3   // Таймер 1
#define INT_SERIAL  4   // Последовательный порт

// Режимы таймеров
#define TIMER_MODE_0    0x00    // 13-битный таймер
#define TIMER_MODE_1    0x01    // 16-битный таймер
#define TIMER_MODE_2    0x02    // 8-битный автоперезагружаемый
#define TIMER_MODE_3    0x03    // Два 8-битных таймера

// Режимы последовательного порта
#define SERIAL_MODE_0   0x00    // Сдвиговый регистр
#define SERIAL_MODE_1   0x40    // 8-битный UART, переменная скорость
#define SERIAL_MODE_2   0x80    // 9-битный UART, фиксированная скорость
#define SERIAL_MODE_3   0xC0    // 9-битный UART, переменная скорость

// Частота кристалла (по умолчанию 12 МГц)
#ifndef FOSC
#define FOSC 12000000UL
#endif

// Макросы для работы с битами
#define SET_BIT(reg, bit)       ((reg) |= (1 << (bit)))
#define CLEAR_BIT(reg, bit)     ((reg) &= ~(1 << (bit)))
#define TOGGLE_BIT(reg, bit)    ((reg) ^= (1 << (bit)))
#define TEST_BIT(reg, bit)      ((reg) & (1 << (bit)))

// Макросы для задержек (приблизительные, зависят от компилятора)
#define NOP()                   __asm__("nop")
#define DELAY_US(us)            { unsigned char i; for(i=0; i<(us); i++) NOP(); }
#define DELAY_MS(ms)            { unsigned int i; for(i=0; i<(ms); i++) DELAY_US(250); }

// ============================================================================
// ФУНКЦИИ-УТИЛИТЫ (INLINE)
// ============================================================================

// Инициализация системы
inline void system_init() {
    // Отключаем все прерывания
    EA = 0;
    
    // Сбрасываем все флаги
    TCON = 0x00;
    SCON = 0x00;
    
    // Инициализируем указатель стека
    SP = 0x07;
    
    // Настраиваем порты (все биты как входы по умолчанию)
    P1 = 0xFF;
}

// Включение/выключение глобальных прерываний
inline void enable_interrupts() { EA = 1; }
inline void disable_interrupts() { EA = 0; }

// Переход в режим пониженного энергопотребления
inline void power_down() {
    PCON |= 0x02;   // Установить бит PD
}

inline void idle_mode() {
    PCON |= 0x01;   // Установить бит IDL
}

#endif // __AT89S4051_H__ 